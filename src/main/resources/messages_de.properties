label.lang.en=ENGLISCH
label.lang.de=DEUTSCHE

documentation=Dokumentation

entities=Entitäten
entities.developer=Entwicklerin/Entwickler
entities.skill=Fertigkeit
entities.account=Konto

model=Modell
model.developer=Developer (Long id, String name, Set skills, Account account)
model.skill=Skill (Long id, String name)
model.account=Account (Long id, String name, AccountStatus accountStatus)

storage=Lager (Jaws MySQL)
storage.accounts=accounts (Id, Name, Status)
storage.skills=skills (Id, Name)
storage.developers=developers (Id, FirstName, LastName, AccountId)
storage.developerskill=developerskill (Id, DeveloperId, SkillId)

actions=Verfügbare Aktionen
actions.create=Erstellen
actions.read=Lesen
actions.update=Aktualisieren
actions.delete=Löschen

layers=Schichten
layers.model=Modell - POJO Klassen
layers.rest=Aussicht - Servlets, die POST-Anforderungen des Benutzers vom Netzwerk über das HTTP / HTTPS-Protokoll verarbeiten
layers.service=Service - Klassen mit Geschäftslogik
layers.repository=Repository - Klassen, die den Zugriff auf Datenbank

interfaces=Schnittstellen
interfaces.accountrepository=AccountRepository extend GenericRepository<T, ID>
interfaces.developerrepository=DeveloperRepository extend GenericRepository<T, ID>
interfaces.skillrepository=SkillRepository extend GenericRepository<T, ID>
interfaces.genericrepository=GenericRepository<T, ID>
interfaces.mapper=Mapper<T, S, ID>

implementations=Implementierung geeigneter Schnittstellen
implementations.javajdbcaccountrepositoryimpl=JdbcAccountRepositoryImpl
implementations.javajdbcdeveloperrepositoryimpl=JdbcDeveloperRepositoryImpl
implementations.javajdbcskillrepositoryimpl=JdbcSkillRepositoryImpl

diagrams.uml=UML
diagrams.accountsequence=Kontenfolge-Diagramm
diagrams.skillsequence=Fähigkeitssequenzdiagramm
diagrams.developersequence=Entwickler-Sequenzdiagramm